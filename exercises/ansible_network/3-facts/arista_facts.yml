---
- name: network configuration to git repos
  hosts: "3.121.78.6"
  gather_facts: no

  tasks:
    # fail with good error for Automation controller user
    - name: determine that both AAP and Machine credentials are set
      assert:
        that:
          - "lookup('env', 'CONTROLLER_USERNAME') !=''"
        fail_msg:
          - "This Job requires two credentials"
          - "Red Hat Ansible Automation Platform credential is not set"
          - "Please assign correct credentials to the Job Template"

    - name: determine that both AAP and Machine credentials are set
      debug:
        msg:
          - "{{ lookup('env', 'CONTROLLER_USERNAME') }}"
          - "{{ lookup('env', 'CONTROLLER_PASSWORD') }}"
          - "{{ lookup('env', 'CONTROLLER_HOST') }}"

    - name: backup configuration
      include_role:
        name: "../roles/backup"
      when: ansible_network_os is defined

    - name: create time stamp for play
      set_fact:
        datetime: "{{ lookup('pipe','date +%Y-%m-%d-%H-%M') }}"
      delegate_to: backup-server
      delegate_facts: true
      run_once: true

    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: /backup/
        state: directory
      delegate_to: backup-server
      become: true
      run_once: true

    - name: Create a directory datetime
      ansible.builtin.file:
        path: "/backup/{{hostvars['backup-server'].datetime}}"
        state: directory
      delegate_to: backup-server
      become: true
      run_once: true

#    - name: save configuration to backup server
#      copy:
#        src: "{{ config_output.backup_path }}"
#        dest: "/backup/{{hostvars['backup-server'].datetime}}/"
#      when: config_output is defined
#      become: true
#      delegate_to: backup-server

#    - name: find backups
#      find:
#        paths: /backup
#        file_type: directory
#      register: backups
#      run_once: true
#      become: true
#      delegate_to: backup-server
#      delegate_facts: true

#    - name: Clone GIT Repository
#      ansible.builtin.git:
#        repo: https://github.com/takitou27/eda-config-repos.git
#        dest: "/backup/{{hostvars['backup-server'].datetime}}"
#        clone: yes
#        update: yes

    - name: Clone Git Repos
      ansible.builtin.shell: git clone https://github.com/takitou27/eda-config-repos.git
      args:
        chdir: "/backup/{{hostvars['backup-server'].datetime}}/"
      delegate_to: backup-server
      delegate_facts: true
      run_once: true
        
    - name: copy folders
      copy:
        dest: "/backup/{{hostvars['backup-server'].datetime}}/"
        src: "{{ config_output.backup_path }}"
        force: true
        delegate_to: backup-server
        delegate_facts: true
        run_once: true

    - name: "Add output directory to git"
      ansible.builtin.shell: |
        git config --global user.name "rhaap"
        git config --global user.email "rhaap@redhat.com"
        git add -A && git commit -m "RHAAP Job ID {{ tower_job_id }}: Automated Commit by Ansible " && git push
        
      args:
        chdir: "/backup/{{hostvars['backup-server'].datetime}}/"
      ignore_errors: true
      register: output
      failed_when: >
        output.msg != "" and
        ("error" in output.msg or
        "conflict" in output.msg or
        "Errno" in output.msg or
        "fatal" in output.msg or
        (output.stdout != "" and
        "nothing to commit, working tree clean" not in output.stdout) or
        (output.stderr != ""))
      delegate_to: backup-server
      delegate_facts: true
      run_once: true

